#!/usr/bin/env bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2016, Joyent, Inc.
#

#
# Common checks/functions that we want in both runtest and runtests.
#


#---- support functions

function fatal
{
    echo "$(basename $0): fatal error: $*"
    exit 1
}


#---- guard

if [[ $(zonename) != "global" ]]; then
    echo "FATAL: must run these tests from the global zone" >&2
    exit 2
fi


guard_file=/lib/sdc/.sdc-test-no-production-data
if [[ $(uname) == "SunOS" && ! -f "$guard_file" ]]; then
    cat <<EOF
To run this test you must create the file:

    $guard_file

after ensuring you have no production data on this SDC.
EOF
    exit 2
fi


#---- ensure USE_TLS is set
if [[ ! -x /opt/smartdc/bin/sapiadm || ! -x /opt/smartdc/bin/sdc-sapi ]]; then
    echo "FATAL: need /opt/smartdc/bin/sapiadm and /opt/smartdc/bin/sdc-sapi"
    exit 2
fi

USE_TLS=$(/opt/smartdc/bin/sapiadm get $(/opt/smartdc/bin/sdc-sapi \
    /services?name=docker | json -H 0.uuid) | json metadata.USE_TLS)

if [[ ${USE_TLS} != "true" ]]; then
    cat >&2 <<EOF
FATAL: You must have TLS enabled to run these tests. To enable, run:

    /opt/smartdc/bin/sapiadm update \$(/opt/smartdc/bin/sdc-sapi \\
        /services?name=docker | json -H 0.uuid) metadata.USE_TLS=true

wait 60 seconds, and then try again.
EOF
    exit 2
fi


#---- ensure PACKAGE_PREFIX has been set, these tests won't work with default

PACKAGE_PREFIX=$(/opt/smartdc/bin/sdc-sapi /services?name=docker | json -H 0.metadata.PACKAGE_PREFIX)
if [[ -z ${PACKAGE_PREFIX} || ${PACKAGE_PREFIX} == 'sdc_' ]]; then
    cat >&2 <<EOF
FATAL: You must set PACKAGE_PREFIX to run these tests. To do this, run:

    /opt/smartdc/bin/sapiadm update \\
       \$(/opt/smartdc/bin/sdc-sapi /services?name=docker | json -H 0.uuid) \\
       metadata.PACKAGE_PREFIX="<YOUR_PREFIX>"

replacing <YOUR_PREFIX> with a package prefix that works for this DC. If you
have no packages, you can create some 'sample-' packages with:

    sdcadm post-setup dev-sample-data

and then use metadata.PACKAGE_PREFIX="sample-" in the command above.
EOF
    exit 2
fi

export DOCKER_UUID="$(vmadm lookup -j alias=docker0 | json 0.uuid)"
export DOCKER_URL="https://$(vmadm lookup -j alias=docker0 | json 0.nics \
    | json -c 'this.nic_tag==="external"' 0.ip):2376"
export FWAPI_URL="http://$(vmadm lookup -j alias=fwapi0 | json 0.nics \
    | json -c 'this.nic_tag==="admin"' 0.ip)"
export PAPI_URL="http://$(vmadm lookup -j alias=papi0 | json 0.nics \
    | json -c 'this.nic_tag==="admin"' 0.ip)"
export VMAPI_URL="http://$(vmadm lookup -j alias=vmapi0 | json 0.nics \
    | json -c 'this.nic_tag==="admin"' 0.ip)"
export SAPI_URL="http://$(vmadm lookup -j alias=sapi0 | json 0.nics \
    | json -c 'this.nic_tag==="admin"' 0.ip)"

echo "# Test config:"
echo "#  DOCKER_UUID=${DOCKER_UUID}"
echo "#  DOCKER_URL=${DOCKER_URL}"
echo "#  FWAPI_URL=${FWAPI_URL}"
echo "#  PAPI_URL=${PAPI_URL}"
echo "#  VMAPI_URL=${VMAPI_URL}"
echo "#  SAPI_URL=${SAPI_URL}"

